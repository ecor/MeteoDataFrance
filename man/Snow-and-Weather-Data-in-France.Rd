% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getMeteoDataFrance.R
\name{Snow and Weather Data in France}
\alias{Snow and Weather Data in France}
\alias{getMeteoDataFrance}
\title{Get measured wether and snow data for French Alps and Pyrennes}
\usage{

  getMeteoDataFrance(url = "https://donneespubliques.meteofrance.fr/donnees_libres/Txt/Nivo/nivo.XDATE.csv",
  dest = system.file("dest", package = "MeteoDataFrance"),
  method = c("wget", "curl"), dates = as.character(Sys.Date() - 10:1, format
  = "\%Y\%m\%d"), times = c(0, 3, 6, 9, 12, 15, 18, 21),
  date_indicator = "XDATE", time_indicator = "XTIME",
  force.download = FALSE, smet.output = TRUE, url_stationcoord = c(csv =
  "https://donneespubliques.meteofrance.fr/\\ndonnees_libres/Txt/Nivo/postesNivo.csv",
  json =
  "https://donneespubliques.meteofrance.fr/\\ndonnees_libres/Txt/Nivo/postesNivo.json"),
  spoutput = FALSE,
  metaparam = read.table(system.file("metadata/paramnames.csv", package =
  "MeteoDataFrance"), sep = ",", header = TRUE, stringsAsFactors = FALSE), ...)
}
\arguments{
\item{url}{URL with data. See  \code{"https://donneespubliques.meteofrance.fr/donnees_libres/Txt/Nivo/nivo.20150810.csv"} or \url{https://donneespubliques.meteofrance.fr/?fond=produit&id_produit=94&id_rubrique=32}}

\item{dest}{destination directory where the downladed csv file is saved}

\item{method}{method applied in \code{\link{download.file}}}

\item{dates}{string containg dates on which date are requested to be downloaded. Actually the date format is \code{\%Y\%m\%d}, es. \code{20150810} for 10 August 2015.}

\item{times}{vector containg the hours at which date are requested to be downloaded (in case of subdaily data)}

\item{date_indicator}{string contained in \code{url} which is replaced by \code{dates}}

\item{time_indicator}{string contained in \code{url} which is replaced by \code{times}}

\item{force.download}{logical value. If \code{TRUE} files are forced to be downloaded and then overwritten, if it is \code{FALSE} (default) and the files already exist in \code{destdir} directory are not downloaded.}

\item{smet.output}{logical value. Default is \code{FALSE}. If it \code{TRUE}, output field names are translated in accordance with SMET format files. (\url{http://models.slf.ch/docserver/meteoio/html/smetio.html})}

\item{url_stationcoord}{string containings the \code{csv} and \code{json} files with stataion geographic metadata.}

\item{spoutput}{logical value. Default is \code{FALSE}. If it \code{TRUE}, spatial information (station coordinates,etc.) are added through  \code{url_stationcoord}.}

\item{metaparam}{\code{data.frame} table containg all metainformation for each variable: name, ID, type, SMET name, measurement unit,unit multiplier and description.}

\item{...}{further arguments}
}
\description{
Get measured wether and snow data for French Alps and Pyrennes
}
\examples{


library(stringr)


url <-  "https://donneespubliques.meteofrance.fr/donnees_libres/Txt/Nivo/nivo.XDATE.csv"

data <- getMeteoDataFrance(url=url,spoutput=TRUE)

head(data[data$numer_sta=="07729",])

 ## SYNOP DATE
url_synop <- "https://donneespubliques.meteofrance.fr/donnees_libres/Txt/Synop/synop.XDATEXTIME.csv"

url_stationcoord_synop <- c(
		csv="https://donneespubliques.meteofrance.fr/
donnees_libres/Txt/Synop/postesSynop.csv",
		json="https://donneespubliques.meteofrance.fr/
donnees_libres/Txt/Synop/postesSynop.json"
)

data_synop <- getMeteoDataFrance(url=url_synop,
	url_stationcoord=url_stationcoord_synop,
 spoutput=TRUE)

##https://donneespubliques.meteofrance.fr/donnees_libres/Txt/Synop/postesSynop.json

}
\author{
Emanuele Cordano
}
\references{
\url{https://donneespubliques.meteofrance.fr/?fond=rubrique},\url{https://donneespubliques.meteofrance.fr/?fond=produit&id_produit=94&id_rubrique=32}
}
\seealso{
\code{\link{download.file}} ,\code{\link{DownloadFiles}}
}

